const char *CREATE_TABLES_QUERY =
"CREATE TABLE IF NOT EXISTS Unit (Id INTEGER PRIMARY KEY, Name TEXT);"
"CREATE TABLE IF NOT EXISTS Tenant (Id INTEGER, UnitId INTEGER, Name TEXT,FOREIGN KEY(UnitId) REFERENCES Unit(Id), PRIMARY KEY (Id, UnitId,Name));"
"CREATE TABLE IF NOT EXISTS Receipt (Id INTEGER PRIMARY KEY, Name TEXT, TenantId INTEGER,Date INTEGER, FOREIGN KEY(TenantId) REFERENCES Tenant(Id));"
"CREATE TABLE IF NOT EXISTS  ReceiptTenant (ReceiptId INTEGER, TenantId INTEGER, FOREIGN KEY(ReceiptId) REFERENCES Receipt(Id), FOREIGN KEY(TenantId) REFERENCES Tenant(Id), PRIMARY KEY(TenantId,ReceiptId));";

const char *INSERT_NEW_UNIT_STATEMENT = "INSERT INTO Unit(Name) VALUES(@NAME);";
const char *INSERT_NEW_TENANT_STATEMENT = "INSERT INTO Tenant(UnitId,Name) VALUES (@UNITID,@NAME);";
const char *INSERT_NEW_RECIPE_STATEMENT = "INSERT INTO Receipt(TenantId,Date) VALUES(@TENANTID,@DATE);";
const char *INSERT_NEW_RECIPETENANT_STATEMENT = "INSERT INTO ReceiptTenant(ReceiptId,TenantId) VALUES(@RECEIPTID,@TENANTID);";
const char *SELECT_UNITS_QUERY = "SELECT * FROM Unit;";
const char *SELECT_TENANTS_QUERY = "SELECT * FROM Tenant WHERE UnitId = @UNITID";
const char *SELECT_RECEIPTS_QUERY = "SELECT Id, Name FROM Receipt WHERE TenantId = @TENANTID";
const char *SELECT_MONTHLY_RECEIPTS_PER_TENANT = "SELECT * FROM Receipt WHERE Date BETWEEN @FROM AND @TO WHERE TenantId = @TENANTID;";
